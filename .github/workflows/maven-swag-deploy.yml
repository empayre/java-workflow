name: Deploy Artifacts

on:
  workflow_call:
    inputs:
      node-version:
        description: 'Node version'
        required: false
        default: "16"
        type: string
      jdk-version:
        description: 'Java version'
        required: false
        default: "17"
        type: string
      jdk-distribution:
        description: 'Java distribution'
        required: false
        default: "temurin"
        type: string
      run-script-name:
        description: ''
        required: true
        default: "build"
        type: string
    secrets:
      github-token:
        required: true
      mm-webhook-url:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
          cache: npm

      - name: Install dependencies
        run: npm ci --ignore-scripts

      - name: Bundle specification
        run: npm run ${{ inputs.run-script-name }}

      - name: Validate specification
        run: npm run validate

      - name: Cache build
        id: cache-build
        uses: actions/cache@v4
        with:
          path: |
            web_deploy
          key: ${{ runner.os }}-web-${{ github.sha }}

  deploy-server:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Setup Maven
        uses: actions/setup-java@v4
        with:
          java-version: ${{ inputs.jdk-version }}
          distribution: ${{ inputs.jdk-distribution }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
          cache: npm

      - name: Install dependencies
        run: npm ci --ignore-scripts

      - name: Bundle specification
        run: npm run ${{ inputs.run-script-name }}

      - name: Cache build
        id: cache-build
        uses: actions/cache@v4
        with:
          path: |
            web_deploy
          key: ${{ runner.os }}-web-${{ github.sha }}

      - name: Extract mvn project info
        id: info
        uses: ./.github/actions/mvn-project-info

      - name: Delete SNAPSHOT versions with branch suffix
        uses: actions/github-script@v7
        env:
          PACKAGE_NAME: ${{ env.PACKAGE_NAME }}
          REPOSITORY_OWNER: ${{ env.REPOSITORY_OWNER }}
          BRANCH_SUFFIX: ${{ env.BRANCH_SUFFIX }}
          CURRENT_BRANCH: ${{ github.ref_name }}
        with:
          script: |
            const fn = require('./scripts/deleteSnapshots.js');
            await fn({ github, core });

      - name: Deploy artifact
        run: |
          mvn -B clean deploy -Drevision=${{ env.REVISION }}-server -Dcommit.number=${{ env.COMMIT_NUMBER }} -P="server"
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ github.token }}
          REVISION: ${{ env.REVISION }}
          COMMIT_NUMBER: ${{ env.COMMIT_NUMBER }}

  deploy-client:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Setup Maven
        uses: actions/setup-java@v4
        with:
          java-version: ${{ inputs.jdk-version }}
          distribution: ${{ inputs.jdk-distribution }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
          cache: npm

      - name: Install dependencies
        run: npm ci --ignore-scripts

      - name: Bundle specification
        run: npm run ${{ inputs.run-script-name }}

      - name: Cache build
        id: cache-build
        uses: actions/cache@v4
        with:
          path: |
            web_deploy
          key: ${{ runner.os }}-web-${{ github.sha }}

      - name: Extract mvn project info
        id: info
        uses: ./.github/actions/mvn-project-info

      - name: Delete SNAPSHOT versions with branch suffix
        uses: actions/github-script@v7
        env:
          PACKAGE_NAME: ${{ env.PACKAGE_NAME }}
          REPOSITORY_OWNER: ${{ env.REPOSITORY_OWNER }}
          BRANCH_SUFFIX: ${{ env.BRANCH_SUFFIX }}
          CURRENT_BRANCH: ${{ github.ref_name }}
        with:
          script: |
            const fn = require('./scripts/deleteSnapshots.js');
            await fn({ github, core });

      - name: Deploy artifact
        run: |
          mvn -B clean deploy -Drevision=${{ env.REVISION }}-client -Dcommit.number=${{ env.COMMIT_NUMBER }} -P="client"
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ github.token }}
          REVISION: ${{ env.REVISION }}
          COMMIT_NUMBER: ${{ env.COMMIT_NUMBER }}

  success-notify:
    runs-on: ubuntu-latest
    needs: [deploy-server, deploy-client]
    if: success()
    steps:
      - name: Mattermost Notification
        uses: rtCamp/action-slack-notify@v2.2.0
        env:
          SLACK_USERNAME: ${{ github.event.repository.name }}
          SLACK_WEBHOOK: ${{ secrets.mm-webhook-url }}
          SLACK_COLOR: "#00c100"
          SLACK_LINK_NAMES: true
          SLACK_FOOTER: ""

  fail-notify:
    runs-on: ubuntu-latest
    needs: [deploy-server, deploy-client]
    if: failure()
    steps:
      - name: Mattermost Notification
        uses: rtCamp/action-slack-notify@v2.2.0
        env:
          SLACK_USERNAME: ${{ github.event.repository.name }}
          SLACK_WEBHOOK: ${{ secrets.mm-webhook-url }}
          SLACK_COLOR: "#e40303"
          SLACK_LINK_NAMES: true
          SLACK_FOOTER: ""

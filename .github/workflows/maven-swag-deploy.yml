name: Deploy Artifact

on:
  workflow_call:
    inputs:
      node-version:
        description: 'Node version'
        required: false
        default: "16"
        type: string
      jdk-version:
        description: 'Java version'
        required: false
        default: "17"
        type: string
      jdk-distribution:
        description: 'Java distribution'
        required: false
        default: "temurin"
        type: string
      run-script-name:
        description: ''
        required: true
        default: "build"
        type: string
      dist-directory:
        description: Directory where bundled artifacts are built
        required: false
        default: "web_deploy"
        type: string
    secrets:
      github-token:
        required: true
      mm-webhook-url:
        required: true

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node-version }}
          cache: npm

      - name: Install dependencies
        run: npm ci --ignore-scripts

      - name: Bundle specification
        run: npm run build

      - name: Validate specification
        run: npm run validate

      - name: Upload specification bundle
        uses: actions/upload-artifact@v3
        with:
          name: spec-bundle
          path: ${{ inputs.dist-directory }}
          if-no-files-found: error
          retention-days: 7

  deploy-server:
    runs-on: ubuntu-20.04
    needs: [build]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Download specification bundle
        uses: actions/download-artifact@v3
        with:
          name: spec-bundle
          path: ${{ inputs.dist-directory }}

      - name: Retrieve commit info
        run: |
          echo "::set-output name=COMMIT_NUMBER::$(git rev-list HEAD --count)"
          echo "::set-output name=SHA_7::${GITHUB_SHA::7}"
        id: commit_info

      - name: Set artifact version
        run: |
          mvn versions:set versions:commit -DnewVersion="1.${{ steps.commit_info.outputs.COMMIT_NUMBER }}-${{ steps.commit_info.outputs.SHA_7 }}-server"

      - name: Deploy server package
        run: |
          mvn --batch-mode deploy -P="server"
        env:
          GITHUB_TOKEN: ${{ secrets.github-token }}

  deploy-client:
    runs-on: ubuntu-20.04
    needs: [ build ]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download specification bundle
        uses: actions/download-artifact@v3
        with:
          name: spec-bundle
          path: ${{ inputs.dist-directory }}

      - name: Cache build
        id: cache-build
        uses: actions/cache@v2
        with:
          path: |
            web_deploy
          key: ${{ runner.os }}-web-${{ github.sha }}

      - name: Retrieve commit info
        run: |
          echo "::set-output name=COMMIT_NUMBER::$(git rev-list HEAD --count)"
          echo "::set-output name=SHA_7::${GITHUB_SHA::7}"
        id: commit_info

      - name: Set artifact version
        run: |
          mvn versions:set versions:commit -DnewVersion="1.${{ steps.commit_info.outputs.COMMIT_NUMBER }}-${{ steps.commit_info.outputs.SHA_7 }}-client"

      - name: Deploy client package
        run: |
          mvn --batch-mode deploy -P="client"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-redoc:
    runs-on: ubuntu-20.04
    needs: [ build ]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node-version }}
          cache: npm

      - name: Install dependencies
        run: npm ci --ignore-scripts

      - name: Build static HTML (main way - OpenAPI)
        id: redoc_openapi
        continue-on-error: true
        run: >
          $(npm bin)/redoc-cli bundle openapi/openapi.yaml -o dist/index.html

      - name: Build static HTML (alternative way - Swagger) - Download specification bundle
        if: ${{ steps.redoc_openapi.outcome == 'failure' }}
        uses: actions/download-artifact@v3
        with:
          name: spec-bundle
          path: ${{ inputs.dist-directory }}

      - name: Build static HTML (alternative way - Swagger) - Launch redoc-cli
        if: ${{ steps.redoc_openapi.outcome == 'failure' }}
        run: >
          $(npm bin)/redoc-cli bundle web_deploy/swagger.yaml -o dist/index.html

      - name: Publish ReDoc on Github Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          force_orphan: true

  success-notify:
    runs-on: ubuntu-20.04
    needs: [deploy-server, deploy-client]
    if: success()
    steps:
      - name: Mattermost Notification
        uses: rtCamp/action-slack-notify@v2.2.0
        env:
          SLACK_USERNAME: ${{ github.event.repository.name }}
          SLACK_WEBHOOK: ${{ secrets.mm-webhook-url }}
          SLACK_COLOR: "#00c100"
          SLACK_LINK_NAMES: true
          SLACK_FOOTER: ""

  fail-notify:
    runs-on: ubuntu-20.04
    needs: [deploy-server, deploy-client]
    if: failure()
    steps:
      - name: Mattermost Notification
        uses: rtCamp/action-slack-notify@v2.2.0
        env:
          SLACK_USERNAME: ${{ github.event.repository.name }}
          SLACK_WEBHOOK: ${{ secrets.mm-webhook-url }}
          SLACK_COLOR: "#e40303"
          SLACK_LINK_NAMES: true
          SLACK_FOOTER: ""

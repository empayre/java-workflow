name: Maven Build Artifact

on:
  workflow_call:
    inputs:
      java-version:
        description: 'Java version'
        required: false
        default: "21"
        type: string
      java-distribution:
        description: 'Java distribution'
        required: false
        default: "temurin"
        type: string
      mvn-args:
        description: 'Additional maven args'
        required: false
        type: string
    secrets:
      action-fetch-token:
        required: true
      github-pkg-ro-pat:
        required: true
      github-pkg-ro-user:
        required: true
      mm-sa-wh-url:
        required: true

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Checkout GitHub Action JDK Build Repo
        uses: actions/checkout@v4
        with:
          repository: empayre/action-jdk-build
          ref: v1.0.22
          token: ${{ secrets.action-fetch-token }}
          path: .github/actions/action-jdk-build

      - name: Run Build Java
        uses: ./.github/actions/action-jdk-build
        with:
          github-pat: ${{ secrets.github-pkg-ro-pat }}
          github-user: ${{ secrets.github-pkg-ro-user }}
          mvn-args: ${{ inputs.mvn-args }}
          jdk-version: ${{ inputs.java-version }}
          jdk-distribution: ${{ inputs.java-distribution }}
  scan:
    name: Vulnerabilities
    needs: build
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v4

      - name: Install Trivy
        run: |
          wget https://github.com/aquasecurity/trivy/releases/download/v0.57.0/trivy_0.57.0_Linux-64bit.deb
          sudo dpkg -i trivy_0.57.0_Linux-64bit.deb

      - uses: actions/download-artifact@v4
        with:
          name: bom.json

      - name: Run Trivy image with SBOM
        run: |
          trivy sbom \
          --db-repository public.ecr.aws/aquasecurity/trivy-db:2 \
          --severity CRITICAL,HIGH --format table -o trivy-report.json \
          ./bom.json

      - name: Display in the console
        run: |
          cat trivy-report.json

      - name: Find and Update Comment with Trivy Results
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const trivyResults = fs.readFileSync('trivy-report.json', 'utf8');
            const pr_number = context.payload.pull_request.number;
        
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr_number,
            });
        
            const existingComment = comments.find(comment => comment.body.includes('Trivy results:'));
      
            if (existingComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: `### Trivy results:\n\`\`\`text\n${trivyResults}\n\`\`\``,
              });
            } else {
              await github.rest.issues.createComment({
                issue_number: pr_number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `### Trivy results:\n\`\`\`text\n${trivyResults}\n\`\`\``,
              });
            }        

      - name: Mattermost Notification
        if: always()
        uses: rtCamp/action-slack-notify@v2.2.0
        env:
          SLACK_USERNAME: ${{ github.event.repository.name }}
          SLACK_WEBHOOK: ${{ secrets.mm-sa-wh-url }}
          SLACK_COLOR: ${{ job.status }}
          SLACK_LINK_NAMES: true
          SLACK_FOOTER: ""  
          SLACK_MESSAGE: ${{ github.event.pull_request.title }}
